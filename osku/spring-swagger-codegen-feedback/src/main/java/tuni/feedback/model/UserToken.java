/**
 * Copyright 2021 Tampere University
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.22).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package tuni.feedback.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Convert;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.Valid;
import javax.validation.constraints.Size;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;
import org.springframework.validation.annotation.Validated;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

import io.swagger.annotations.ApiModelProperty;
import tuni.feedback.model.converters.LongArrayConverter;

/**
 * UserToken
 */
@Validated
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2021-04-16T16:17:33.447797968+03:00[Europe/Helsinki]")
@Entity(name = Definitions.ENTITY_USER_TOKEN)
@Table(name = Definitions.TABLE_USER_TOKEN, indexes = @Index(name = Definitions.COLUMN_TOKEN + "_unique", columnList = Definitions.COLUMN_TOKEN, unique = true))
@JsonInclude(Include.NON_NULL)
public class UserToken {
	@Id
	@Column(name = Definitions.COLUMN_TOKEN_ID)
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id = null;
	@Transient
	@JsonProperty(Definitions.PROPERTY_LINK)
	private String link = null;
	@Column(name = Definitions.COLUMN_TOKEN, length = tuni.feedback.security.model.Definitions.MAX_LENGTH_PASSWORD)
	@JsonProperty(Definitions.PROPERTY_TOKEN)
	private String token = null;
	@Convert(converter = LongArrayConverter.class)
	@Column(name = Definitions.COLUMN_QUESTIONARE_ID)
	@JsonProperty(Definitions.PROPERTY_QUESTIONARE_ID)
	@Valid
	private List<Long> questionareId = null;
	@CreationTimestamp
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = Definitions.COLUMN_ROW_CREATED)
	private Date rowCreated = null;
	@UpdateTimestamp
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = Definitions.COLUMN_ROW_UPDATED)
	private Date rowUpdated = null;

	/**
	 * 
	 * @param token
	 * @return this
	 */
	public UserToken token(String token) {
		this.token = token;
		return this;
	}

	/**
	 * Get token
	 * 
	 * @return token
	 **/
	@ApiModelProperty(value = "")
	@Size(max=tuni.feedback.security.model.Definitions.MAX_LENGTH_PASSWORD)
	public String getToken() {
		return token;
	}

	/**
	 * 
	 * @param token
	 */
	public void setToken(String token) {
		this.token = token;
	}

	/**
	 * 
	 * @param link
	 * @return this
	 */
	public UserToken link(String link) {
		this.link = link;
		return this;
	}

	/**
	 * Get link
	 * 
	 * @return link
	 **/
	@ApiModelProperty(value = "")
	public String getLink() {
		return link;
	}

	/**
	 * 
	 * @param link
	 */
	public void setLink(String link) {
		this.link = link;
	}

	/**
	 * 
	 * @param questionareId
	 * @return this
	 */
	public UserToken questionareId(List<Long> questionareId) {
		this.questionareId = questionareId;
		return this;
	}

	/**
	 * 
	 * @param questionareIdItem
	 * @return this
	 */
	public UserToken addQuestionareIdItem(Long questionareIdItem) {
		if (this.questionareId == null) {
			this.questionareId = new ArrayList<>();
		}
		this.questionareId.add(questionareIdItem);
		return this;
	}

	/**
	 * Get questionareId
	 * 
	 * @return questionareId
	 **/
	@ApiModelProperty(value = "")
	public List<Long> getQuestionareId() {
		return questionareId;
	}

	/**
	 * 
	 * @param questionareId
	 */
	public void setQuestionareId(List<Long> questionareId) {
		this.questionareId = questionareId;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((link == null) ? 0 : link.hashCode());
		result = prime * result + ((questionareId == null) ? 0 : questionareId.hashCode());
		result = prime * result + ((token == null) ? 0 : token.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		UserToken other = (UserToken) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (link == null) {
			if (other.link != null)
				return false;
		} else if (!link.equals(other.link))
			return false;
		if (questionareId == null) {
			if (other.questionareId != null)
				return false;
		} else if (!questionareId.equals(other.questionareId))
			return false;
		if (token == null) {
			if (other.token != null)
				return false;
		} else if (!token.equals(other.token))
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class UserToken {\n");

		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    token: ").append(toIndentedString(token)).append("\n");
		sb.append("    link: ").append(toIndentedString(link)).append("\n");
		sb.append("    questionareId: ").append(toIndentedString(questionareId)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}
